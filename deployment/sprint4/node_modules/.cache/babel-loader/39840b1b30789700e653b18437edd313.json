{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Allen\\\\Desktop\\\\WEBDEV\\\\IS_413\\\\sprint4\\\\src\\\\comps\\\\context\\\\AppProvider.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport App from '../../App';\nimport AppContext from './AppContext';\nimport Spinner from 'react-bootstrap/Spinner';\nimport produce from 'immer';\nimport ProductDetail from '../ProductDetail'; //import immer\n\nclass AppProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = pid => {\n      this.setState(state => produce(state, draft => {\n        if (!draft.cart[pid]) {\n          draft.cart[pid] = 1;\n        } else {\n          draft.cart[pid]++;\n        }\n      }));\n    };\n\n    this.takeFromCart = pid => {\n      this.setState(state => produce(state, draft => {\n        if (draft.cart[pid]) {\n          draft.cart[pid]++;\n        }\n      }));\n    };\n\n    this.addToRecentViews = pid => {\n      console.log('state.addToRecentViews()', this.state.recentViews);\n      this.setState(state => produce(state, draft => {\n        console.log('draft.recentViews.unshift(product)', draft.recentViews.indexOf(pid));\n\n        if (draft.recentViews.indexOf(pid) === -1) {\n          draft.recentViews.unshift(pid);\n        } else {\n          draft.recentViews.splice(draft.recentViews.indexOf(pid), 1);\n          draft.recentViews.unshift(pid);\n        }\n      }));\n    };\n\n    this.removeFromCart = prodID => {\n      console.log('inthe removoreFromCart---------->------>');\n      this.setState(state => produce(state, draft => {\n        delete draft.cart[prodID];\n      }));\n    };\n\n    this.getCartCount = () => {\n      console.log('in the getCartCount');\n      let arr_cart = Object.entries(this.state.cart);\n      let count = null;\n\n      for (const item of arr_cart) {\n        if (!count) count = 0;\n        count += item;\n      }\n\n      return count;\n    };\n\n    this.getCartTotalPrice = () => {\n      let arr_cart = Object.entries(this.state.cart);\n      let total_price = 0;\n\n      for (const item of arr_cart) {\n        let item_info = this.state.product.find(x => x.id === parseInt(item[0]));\n        let price = parseFloat(item_info.price) * item[1];\n        total_price += price;\n      }\n\n      return total_price;\n    };\n\n    this.emptyCart = prodID => {\n      console.log('inthe removoreFromCart---------->------>');\n      this.setState(state => produce(state, draft => {\n        draft.cart = {};\n      }));\n    };\n\n    this.actions = {\n      addToCart: this.addToCart,\n      removeFromCart: this.removeFromCart,\n      getCartCount: this.getCartCount,\n      getCartTotalPrice: this.getCartTotalPrice,\n      emptyCart: this.emptyCart,\n      addToRecentViews: this.addToRecentViews,\n      takeFromCart: this.takeFromCart\n    };\n    this.state = {\n      categories: null,\n      product: null,\n      cart: {},\n      recentViews: []\n    }; //.....where pid is the id of the product.....\n  }\n\n  render() {\n    if (!this.state.product) {\n      return React.createElement(React.Fragment, null, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(AppContext.Provider, {\n      value: { ...this.state,\n        ...this.actions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, React.createElement(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  async componentDidMount() {\n    const cate = await axios.get('http://localhost:8000/category/');\n    const prod = await axios.get('http://localhost:8000/product/');\n    this.setState({ ...this.state,\n      categories: cate.data,\n      product: prod.data\n    });\n  }\n\n}\n\nexport default AppProvider;","map":{"version":3,"sources":["C:/Users/Elijah Allen/Desktop/WEBDEV/IS_413/sprint4/src/comps/context/AppProvider.js"],"names":["React","axios","App","AppContext","Spinner","produce","ProductDetail","AppProvider","Component","constructor","props","addToCart","pid","setState","state","draft","cart","takeFromCart","addToRecentViews","console","log","recentViews","indexOf","unshift","splice","removeFromCart","prodID","getCartCount","arr_cart","Object","entries","count","item","getCartTotalPrice","total_price","item_info","product","find","x","id","parseInt","price","parseFloat","emptyCart","actions","categories","render","componentDidMount","cate","get","prod","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AACA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBlBC,SAtBkB,GAsBLC,GAAD,IAAQ;AAChB,WAAKC,QAAL,CAAcC,KAAK,IAAGT,OAAO,CAACS,KAAD,EAAQC,KAAK,IAAE;AACxC,YAAG,CAACA,KAAK,CAACC,IAAN,CAAWJ,GAAX,CAAJ,EAAoB;AAChBG,UAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAX,IAAkB,CAAlB;AACH,SAFD,MAEK;AACDG,UAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAX;AACH;AACJ,OAN4B,CAA7B;AAQH,KA/BiB;;AAAA,SAgClBK,YAhCkB,GAgCFL,GAAD,IAAQ;AACnB,WAAKC,QAAL,CAAcC,KAAK,IAAGT,OAAO,CAACS,KAAD,EAAQC,KAAK,IAAE;AACxC,YAAGA,KAAK,CAACC,IAAN,CAAWJ,GAAX,CAAH,EAAmB;AACfG,UAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAX;AACH;AACJ,OAJ4B,CAA7B;AAMH,KAvCiB;;AAAA,SAwClBM,gBAxCkB,GAwCEN,GAAD,IAAQ;AACvBO,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,KAAKN,KAAL,CAAWO,WAAnD;AACA,WAAKR,QAAL,CAAcC,KAAK,IAAGT,OAAO,CAACS,KAAD,EAAQC,KAAK,IAAE;AACxCI,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAiDL,KAAK,CAACM,WAAN,CAAkBC,OAAlB,CAA0BV,GAA1B,CAAjD;;AACA,YAAGG,KAAK,CAACM,WAAN,CAAkBC,OAAlB,CAA0BV,GAA1B,MAAiC,CAAC,CAArC,EAAuC;AACnCG,UAAAA,KAAK,CAACM,WAAN,CAAkBE,OAAlB,CAA0BX,GAA1B;AACH,SAFD,MAEK;AACDG,UAAAA,KAAK,CAACM,WAAN,CAAkBG,MAAlB,CAAyBT,KAAK,CAACM,WAAN,CAAkBC,OAAlB,CAA0BV,GAA1B,CAAzB,EAAwD,CAAxD;AACAG,UAAAA,KAAK,CAACM,WAAN,CAAkBE,OAAlB,CAA0BX,GAA1B;AACH;AACJ,OAR4B,CAA7B;AAUH,KApDiB;;AAAA,SAqDlBa,cArDkB,GAqDAC,MAAD,IAAW;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA,WAAKP,QAAL,CAAcC,KAAK,IAAET,OAAO,CAACS,KAAD,EAAOC,KAAK,IAAG;AACvC,eAAOA,KAAK,CAACC,IAAN,CAAWU,MAAX,CAAP;AACH,OAF2B,CAA5B;AAGH,KA1DiB;;AAAA,SA2DlBC,YA3DkB,GA2DH,MAAK;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAIQ,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKhB,KAAL,CAAWE,IAA1B,CAAf;AACA,UAAIe,KAAK,GAAG,IAAZ;;AACA,WAAI,MAAMC,IAAV,IAAkBJ,QAAlB,EAA2B;AACvB,YAAG,CAACG,KAAJ,EAAUA,KAAK,GAAC,CAAN;AACVA,QAAAA,KAAK,IAAIC,IAAT;AACH;;AACD,aAAOD,KAAP;AACH,KApEiB;;AAAA,SAqElBE,iBArEkB,GAqEE,MAAK;AACrB,UAAIL,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKhB,KAAL,CAAWE,IAA1B,CAAf;AACA,UAAIkB,WAAW,GAAG,CAAlB;;AACA,WAAI,MAAMF,IAAV,IAAkBJ,QAAlB,EAA2B;AACvB,YAAIO,SAAS,GAAG,KAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwBC,CAAC,IAAGA,CAAC,CAACC,EAAF,KAAOC,QAAQ,CAACR,IAAI,CAAC,CAAD,CAAL,CAA3C,CAAhB;AACA,YAAIS,KAAK,GAAGC,UAAU,CAACP,SAAS,CAACM,KAAX,CAAV,GAA8BT,IAAI,CAAC,CAAD,CAA9C;AACAE,QAAAA,WAAW,IAAIO,KAAf;AACH;;AACD,aAAOP,WAAP;AACH,KA9EiB;;AAAA,SA+ElBS,SA/EkB,GA+ELjB,MAAD,IAAW;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA,WAAKP,QAAL,CAAcC,KAAK,IAAET,OAAO,CAACS,KAAD,EAAOC,KAAK,IAAG;AACvCA,QAAAA,KAAK,CAACC,IAAN,GAAW,EAAX;AACH,OAF2B,CAA5B;AAGH,KApFiB;;AAEd,SAAK4B,OAAL,GAAa;AACTjC,MAAAA,SAAS,EAAE,KAAKA,SADP;AAETc,MAAAA,cAAc,EAAE,KAAKA,cAFZ;AAGTE,MAAAA,YAAY,EAAE,KAAKA,YAHV;AAITM,MAAAA,iBAAiB,EAAE,KAAKA,iBAJf;AAKTU,MAAAA,SAAS,EAAE,KAAKA,SALP;AAMTzB,MAAAA,gBAAgB,EAAE,KAAKA,gBANd;AAOTD,MAAAA,YAAY,EAAE,KAAKA;AAPV,KAAb;AASA,SAAKH,KAAL,GAAa;AACT+B,MAAAA,UAAU,EAAE,IADH;AAETT,MAAAA,OAAO,EAAE,IAFA;AAGTpB,MAAAA,IAAI,EAAE,EAHG;AAMTK,MAAAA,WAAW,EAAC;AANH,KAAb,CAXc,CAoBd;AACH;;AAgEDyB,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKhC,KAAL,CAAWsB,OAAf,EAAuB;AACnB,aACI,0CACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;;AACD,WACI,0CACI,oBAAC,UAAD,CAAY,QAAZ;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKtB,KAAT;AAAgB,WAAG,KAAK8B;AAAxB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AASH;;AACD,QAAMG,iBAAN,GAAyB;AACrB,UAAMC,IAAI,GAAI,MAAM/C,KAAK,CAACgD,GAAN,CAAU,iCAAV,CAApB;AACA,UAAMC,IAAI,GAAI,MAAMjD,KAAK,CAACgD,GAAN,CAAU,gCAAV,CAApB;AACA,SAAKpC,QAAL,CAAc,EAAC,GAAG,KAAKC,KAAT;AAAgB+B,MAAAA,UAAU,EAAEG,IAAI,CAACG,IAAjC;AAAuCf,MAAAA,OAAO,EAAEc,IAAI,CAACC;AAArD,KAAd;AACH;;AA7GoC;;AA+GzC,eAAe5C,WAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport App from '../../App'\r\nimport AppContext from './AppContext'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport produce from 'immer'\r\nimport ProductDetail from '../ProductDetail';\r\n//import immer\r\nclass AppProvider extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.actions={\r\n            addToCart: this.addToCart,\r\n            removeFromCart: this.removeFromCart,\r\n            getCartCount: this.getCartCount, \r\n            getCartTotalPrice: this.getCartTotalPrice, \r\n            emptyCart: this.emptyCart,  \r\n            addToRecentViews: this.addToRecentViews,\r\n            takeFromCart: this.takeFromCart,\r\n        }\r\n        this.state = {\r\n            categories: null,\r\n            product: null,\r\n            cart: {\r\n                \r\n            },\r\n            recentViews:[], \r\n            \r\n        }\r\n        //.....where pid is the id of the product.....\r\n    }\r\n    addToCart = (pid) =>{\r\n        this.setState(state=> produce(state, draft=>{\r\n            if(!draft.cart[pid]){\r\n                draft.cart[pid] = 1\r\n            }else{\r\n                draft.cart[pid]++\r\n            }\r\n        }))\r\n        \r\n    }\r\n    takeFromCart = (pid) =>{\r\n        this.setState(state=> produce(state, draft=>{\r\n            if(draft.cart[pid]){\r\n                draft.cart[pid]++\r\n            }\r\n        }))\r\n        \r\n    }\r\n    addToRecentViews = (pid) =>{\r\n        console.log('state.addToRecentViews()', this.state.recentViews)\r\n        this.setState(state=> produce(state, draft=>{\r\n            console.log('draft.recentViews.unshift(product)',draft.recentViews.indexOf(pid))\r\n            if(draft.recentViews.indexOf(pid)===-1){\r\n                draft.recentViews.unshift(pid)\r\n            }else{\r\n                draft.recentViews.splice(draft.recentViews.indexOf(pid),1)\r\n                draft.recentViews.unshift(pid)\r\n            }\r\n        }))\r\n\r\n    }\r\n    removeFromCart = (prodID) =>{\r\n        console.log('inthe removoreFromCart---------->------>')\r\n        this.setState(state=>produce(state,draft =>{\r\n            delete draft.cart[prodID]\r\n        }))\r\n    }\r\n    getCartCount = () =>{\r\n        console.log('in the getCartCount')\r\n        let arr_cart = Object.entries(this.state.cart)\r\n        let count = null\r\n        for(const item of arr_cart){\r\n            if(!count)count=0\r\n            count += item    \r\n        }\r\n        return count\r\n    }\r\n    getCartTotalPrice = () =>{\r\n        let arr_cart = Object.entries(this.state.cart)\r\n        let total_price = 0\r\n        for(const item of arr_cart){\r\n            let item_info = this.state.product.find(x=> x.id===parseInt(item[0]))\r\n            let price = parseFloat(item_info.price) * item[1]\r\n            total_price += price\r\n        }\r\n        return total_price\r\n    }    \r\n    emptyCart = (prodID) =>{\r\n        console.log('inthe removoreFromCart---------->------>')\r\n        this.setState(state=>produce(state,draft =>{\r\n            draft.cart={}\r\n        }))\r\n    }\r\n    render(){\r\n        if(!this.state.product){\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"danger\" />                    \r\n                </>\r\n            ) \r\n    \r\n        }      \r\n        return(\r\n            <>\r\n                <AppContext.Provider  value={{...this.state, ...this.actions}}>\r\n                    <App/>\r\n                </AppContext.Provider>\r\n                \r\n            </> \r\n        )\r\n        \r\n    }\r\n    async componentDidMount(){\r\n        const cate =  await axios.get('http://localhost:8000/category/')\r\n        const prod =  await axios.get('http://localhost:8000/product/')\r\n        this.setState({...this.state, categories: cate.data, product: prod.data})\r\n    }\r\n}\r\nexport default AppProvider"]},"metadata":{},"sourceType":"module"}