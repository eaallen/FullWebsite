{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Allen\\\\Desktop\\\\WEBDEV\\\\IS_413\\\\sprint4\\\\src\\\\comps\\\\CheckOut.js\";\nimport React, { useContext } from 'react';\nimport * as bs from 'react-bootstrap';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport AppContext from './context/AppContext';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useStripe, CardElement, Elements, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Container, Row, Col, Button, Jumbotron } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\"; // import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n// const stripePromise = loadStripe(...)\n\nconst stripePromise = loadStripe(\"pk_test_uvsUqlNRjAmg0WiBpMSZik8c00R8NDmpAS\");\n\nfunction Checkout(props) {\n  // we'll add Stripe's Elements component here later\n  return React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(CheckoutController, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Checkout;\n\nconst CheckoutController = props => {\n  const context = useContext(AppContext);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [getError, setError] = React.useState(null);\n  const history = useHistory(); // console.log('count++++>', context.getCartTotalPrice())\n\n  const total = context.getCartTotalPrice();\n  return React.createElement(Formik, {\n    initialValues: {\n      name: 'Conrad Fox',\n      address1: '1234',\n      address2: '5678',\n      city: 'Provo',\n      state: 'UT',\n      zipcode: '84602',\n      total: context.getCartTotalPrice(),\n      items: context.cart,\n      payment_intent: {\n        data: 'this is data'\n      }\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validate: values => {\n      const errors = {};\n      console.log('validating', values);\n      let arr_values = Object.keys(values);\n      arr_values.map(item => {\n        if (!values[item]) {\n          errors[item] = 'Required';\n        }\n      });\n      return errors;\n    },\n    onSubmit: async (values, actions) => {\n      setError(null);\n      console.log('submit', values); // const jsonvlaues = JSON.stringify(values)\n      // console.log(jsonvlaues)\n\n      const resp = await axios.post('http://localhost:8000/sale/', values);\n      console.log(\"respsonse baby\", resp.data);\n      const stripe_resp = await stripe.confirmCardPayment(resp.data.client_secret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: values.name\n          } //see source code for this part if having errors\n\n        }\n      });\n\n      if (stripe_resp.error) {\n        console.error(\"rko'd:\", stripe_resp.error.message);\n        setError(stripe_resp.error.message);\n      } else {\n        if (stripe_resp.paymentIntent.status === 'succeeded') {\n          //more code here\n          context.emptyCart();\n          history.push(\"/Thankyou\");\n        }\n      }\n\n      console.log('rat tunnels is... THE CREAM OF THE CROP!', stripe_resp);\n      await new Promise(resolve => {\n        setTimeout(() => {\n          // wait 2 seconds, then set the form as \"not submitting\"\n          resolve(); // actions.setSubmitting(false)\n        }, 2000);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, form => React.createElement(PaymentForm, {\n    form: form,\n    total: total,\n    context: context,\n    stripe_error: getError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }));\n};\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\n\n\nconst PaymentForm = props => React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n}, console.log('this is the props-|-|-|-|-|o|-|', props), React.createElement(\"div\", {\n  className: \"purchase-from\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }\n}, React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 13\n  }\n}, React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 17\n  }\n}, React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }\n}, React.createElement(\"div\", {\n  className: \"shipping-form\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 25\n  }\n}, React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 29\n  }\n}, \"Shipping\"), React.createElement(Input, {\n  title: \"Name:\",\n  name: \"name\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 29\n  }\n}), React.createElement(Input, {\n  title: \"Address 1:\",\n  name: \"address1\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 29\n  }\n}), React.createElement(Input, {\n  title: \"Address 2:\",\n  name: \"address2\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 29\n  }\n}), React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 29\n  }\n}, React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 33\n  }\n}, React.createElement(Input, {\n  title: \"City:\",\n  name: \"city\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 37\n  }\n})), React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 33\n  }\n}, React.createElement(Input, {\n  title: \"State:\",\n  name: \"state\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 37\n  }\n})), React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 33\n  }\n}, React.createElement(Input, {\n  title: \"Zipcode:\",\n  name: \"zipcode\",\n  type: \"text\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 37\n  }\n}))))), React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 21\n  }\n}, React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 25\n  }\n}, \"Payment\"), React.createElement(\"div\", {\n  className: \"div-underline-lite scroll-div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 25\n  }\n}, Object.entries(props.context.cart).map(item => {\n  let item_info = props.context.product.find(x => x.id === parseInt(item[0]));\n  return React.createElement(Row, {\n    key: item[0] + 'ID',\n    className: \"div-underline-extra-lite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, item_info.name), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, item[1]), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }, \"$\", item_info.price * item[1]));\n})), React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 25\n  }\n}, React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 30\n  }\n}), React.createElement(Col, {\n  className: \"text-right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 41\n  }\n}, \"Total Price:\"), React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 87\n  }\n}, \"$\", props.context.getCartTotalPrice().toFixed(2))), React.createElement(CardElement, {\n  options: CARD_ELEMENT_OPTIONS,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 25\n  }\n}), React.createElement(\"div\", {\n  className: \"text-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 25\n  }\n}, React.createElement(bs.Button, {\n  variant: \"warning\",\n  className: \"button-spacing\",\n  type: \"submit\",\n  disabled: props.form.isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 29\n  }\n}, props.form.isSubmitting ? React.createElement(Spinner, {\n  animation: \"border\",\n  variant: \"primary\",\n  size: \"sm\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 160\n  }\n}) : 'BUY! BUY! BUY!')), React.createElement(\"p\", {\n  className: \"text-center\",\n  style: {\n    color: 'red'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 25\n  }\n}, props.stripe_error))))));\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\n\n\nconst Input = props => React.createElement(Field, {\n  name: props.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }\n}, rProps => React.createElement(bs.Form.Group, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }\n}, React.createElement(bs.Form.Control, Object.assign({\n  disabled: props.disabled,\n  type: props.type,\n  placeholder: props.title\n}, rProps.field, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 13\n  }\n})), rProps.meta.touched && rProps.meta.error && React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 17\n  }\n}, rProps.meta.error)));\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Elijah Allen/Desktop/WEBDEV/IS_413/sprint4/src/comps/CheckOut.js"],"names":["React","useContext","bs","Formik","Form","Field","axios","AppContext","Spinner","useStripe","CardElement","Elements","useElements","loadStripe","Container","Row","Col","Button","Jumbotron","useHistory","stripePromise","Checkout","props","CheckoutController","context","stripe","elements","getError","setError","useState","history","total","getCartTotalPrice","name","address1","address2","city","state","zipcode","items","cart","payment_intent","data","values","errors","console","log","arr_values","Object","keys","map","item","actions","resp","post","stripe_resp","confirmCardPayment","client_secret","payment_method","card","getElement","billing_details","error","message","paymentIntent","status","emptyCart","push","Promise","resolve","setTimeout","form","PaymentForm","isSubmitting","entries","item_info","product","find","x","id","parseInt","price","toFixed","CARD_ELEMENT_OPTIONS","color","stripe_error","Input","rProps","disabled","type","title","field","meta","touched","style","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport axios from 'axios'\r\nimport AppContext from './context/AppContext' \r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport {useStripe, CardElement, Elements, useElements} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport { Container, Row, Col, Button, Jumbotron} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n// import { loadStripe } from '@stripe/stripe-js';\r\n\r\n\r\n// const stripePromise = loadStripe(...)\r\n\r\nconst stripePromise = loadStripe(\"pk_test_uvsUqlNRjAmg0WiBpMSZik8c00R8NDmpAS\");\r\nfunction Checkout(props) {\r\n    // we'll add Stripe's Elements component here later\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutController />\r\n        </Elements>\r\n    )\r\n}\r\nexport default Checkout\r\n\r\n\r\nconst CheckoutController = props => {\r\n    const context = useContext(AppContext)\r\n    const stripe = useStripe()\r\n    const elements = useElements();\r\n    const [getError, setError] = React.useState(null)\r\n    const history = useHistory()\r\n    // console.log('count++++>', context.getCartTotalPrice())\r\n    \r\n    const total = context.getCartTotalPrice()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: 'Conrad Fox',\r\n                address1: '1234',\r\n                address2: '5678',\r\n                city: 'Provo',\r\n                state: 'UT',\r\n                zipcode: '84602',\r\n                total: context.getCartTotalPrice(),\r\n                items: context.cart,\r\n                payment_intent: {data:'this is data'}\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                console.log('validating', values)\r\n                let arr_values = Object.keys(values)\r\n                arr_values.map( item =>{\r\n                    if(!values[item]){\r\n                        errors[item] = 'Required'\r\n                    }\r\n                })\r\n                \r\n                return errors\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                setError(null)\r\n                console.log('submit', values)\r\n                // const jsonvlaues = JSON.stringify(values)\r\n                // console.log(jsonvlaues)\r\n                const resp = await axios.post('http://localhost:8000/sale/',values)\r\n                console.log(\"respsonse baby\",resp.data)\r\n                const stripe_resp = await stripe.confirmCardPayment(resp.data.client_secret,{\r\n                    payment_method: {\r\n                        card: elements.getElement(CardElement),\r\n                        billing_details: {\r\n                            name: values.name,\r\n                        }, //see source code for this part if having errors\r\n                    } \r\n                })\r\n                if(stripe_resp.error){\r\n                    console.error(\"rko'd:\",stripe_resp.error.message)\r\n                    setError(stripe_resp.error.message)\r\n                }else{\r\n                    if(stripe_resp.paymentIntent.status==='succeeded'){\r\n                        //more code here\r\n                        context.emptyCart()\r\n                        history.push(\"/Thankyou\");\r\n\r\n                    }\r\n                }\r\n                console.log('rat tunnels is... THE CREAM OF THE CROP!', stripe_resp)\r\n                await new Promise( resolve =>{\r\n                    setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                        resolve()\r\n                        // actions.setSubmitting(false)\r\n                    }, 2000)\r\n\r\n                })\r\n            }}\r\n        >{form => (\r\n            <PaymentForm form={form} total={total} context={context} stripe_error={getError}/>\r\n        )}</Formik>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\nconst PaymentForm = props => (\r\n    <Form >\r\n        {console.log('this is the props-|-|-|-|-|o|-|',props)}\r\n        <div className='purchase-from'>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className='shipping-form'>\r\n                            <h2>Shipping</h2>\r\n                            <Input title=\"Name:\" name=\"name\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                            <Input title=\"Address 1:\" name=\"address1\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                            <Input title=\"Address 2:\" name=\"address2\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Input title=\"City:\" name=\"city\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Input title=\"State:\" name=\"state\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Input title=\"Zipcode:\" name=\"zipcode\" type=\"text\" disabled={props.form.isSubmitting}/>                                       \r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <h2>Payment</h2>\r\n                        <div className='div-underline-lite scroll-div'>\r\n                            {Object.entries(props.context.cart).map(item =>{\r\n                                let item_info = props.context.product.find(x=> x.id===parseInt(item[0]))\r\n                                return(\r\n                                    <Row key={item[0]+'ID'} className='div-underline-extra-lite'>\r\n                                        <Col>\r\n                                            {item_info.name}\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {item[1]}\r\n                                        </Col>\r\n                                        <Col>\r\n                                            ${item_info.price*item[1]}\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <Row><Col></Col><Col className=\"text-right\">Total Price:</Col><Col>${props.context.getCartTotalPrice().toFixed(2)}</Col></Row>\r\n                        <CardElement options={CARD_ELEMENT_OPTIONS}/>        \r\n                        <div className='text-center'>\r\n                            <bs.Button variant=\"warning\" className=\"button-spacing\" type='submit' disabled={props.form.isSubmitting}>{props.form.isSubmitting? <Spinner animation=\"border\" variant=\"primary\" size=\"sm\"/>: 'BUY! BUY! BUY!'}</bs.Button>\r\n                        </div>\r\n                        <p className='text-center' style={{color:'red'}}>{props.stripe_error}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    </Form>\r\n)\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n           \r\n            <bs.Form.Control\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                placeholder={props.title}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n    style: {\r\n        base:{\r\n            color: \"#32325d\",\r\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n            fontSmoothing: \"antialiased\",\r\n            fontSize: \"16px\",\r\n            \"::placeholder\": {\r\n                color: \"#aab7c4\",\r\n            },\r\n        },\r\n        invalid: {\r\n            color: \"#fa755a\",\r\n            iconColor: \"#fa755a\",\r\n        },\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}